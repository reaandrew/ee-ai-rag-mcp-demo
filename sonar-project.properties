sonar.projectKey=reaandrew_ee-ai-rag-mcp-demo
sonar.organization=reaandrew

# Source configuration
sonar.sources=.
sonar.exclusions=node_modules/**,coverage/**,scripts/**,**/scripts/**

# Test configuration
sonar.tests=.
sonar.test.inclusions=**/*.test.js,**/*.spec.js,**/*test_*.py,**/test_*.py
sonar.test.exclusions=node_modules/**

# Source encoding
sonar.sourceEncoding=UTF-8

# Terraform analysis configuration
sonar.terraform.activate=true
sonar.terraform.file.suffixes=.tf
sonar.terraform.provider.name=aws

# Python analysis configuration
sonar.python.version=3.9
sonar.python.coverage.reportPaths=coverage-reports/python-coverage.xml
sonar.coverage.exclusions=**/__init__.py,**/conftest.py,**/setup.py,**/utils/bedrock_utils.py,**/utils/opensearch_utils.py,**/scripts/**,scripts/**,**/scripts/admin/**,**/generate_api_token.py

# Include terraform files explicitly
sonar.inclusions=**/*.tf,**/*.js,**/*.jsx,**/*.ts,**/*.tsx,**/*.yml,**/*.yaml,**/*.py

# Quality gate configuration
sonar.qualitygate.wait=true
sonar.qualitygate.timeout=300

# Security settings
sonar.security.hotspots.mustBeReviewed=true

# Only fail on critical and high severity issues
sonar.qualitygate.ignore=INFO,MINOR

sonar.issue.ignore.multicriteria=e1,e2

# Disable rule 1 (e.g., S6249 - insecure HTTP to S3 buckets)
sonar.issue.ignore.multicriteria.e1.ruleKey=terraform:S6249
sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.tf

# Disable rule 2 (e.g., S6352 - incomplete logging)
sonar.issue.ignore.multicriteria.e2.ruleKey=terraform:S6258
sonar.issue.ignore.multicriteria.e2.resourceKey=**/*.tf