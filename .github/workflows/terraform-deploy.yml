name: Terraform Deploy

on:
  push:
    tags:
      - 'v*'

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.CI_ROLE_ARN }}
          aws-region: eu-west-2
          
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Create dummy files
        # In a real project, this would be part of your build process
        # For this example, we create a placeholder file for Terraform to use
        run: |
          mkdir -p terraform/app
          echo '{}' > terraform/app/package.json
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.7"
          
      - name: Terraform Init
        working-directory: ./terraform/app
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="region=eu-west-2" -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}"
        
      - name: Terraform Plan
        working-directory: ./terraform/app
        run: terraform plan -var="ci_role_arn=${{ secrets.CI_ROLE_ARN }}" -out=tfplan
        
      - name: Terraform Apply
        working-directory: ./terraform/app
        run: terraform apply -auto-approve tfplan